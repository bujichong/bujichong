import{_ as e,p as t,q as p,s,G as n,t as o,J as c,n as l}from"./framework-d4dfb5a8.js";const i={},u=c(`<blockquote><p>在uni 项目中全局变量有 多方法，自定义全局变量，绑定在 <code>globalData</code> 或 <code>Vue.prototype</code> 上，以及 <code>Vuex</code>，这里我们主要用 Vuex，并且在<code>vuex</code> 里做变量持久化。</p></blockquote><h2 id="vue-prototype" tabindex="-1"><a class="header-anchor" href="#vue-prototype" aria-hidden="true">#</a> Vue.prototype</h2><p>这里 我们将全局方法绑定在 <code>Vue.prototype</code> 上，在 <code>.vue</code> 文件中，我们方便直接 通过 <code>this</code> 指针调用。</p><p><code>@extends/vue.extend.js</code> ：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> tools <span class="token keyword">from</span> <span class="token string">&quot;./tools&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> bus <span class="token keyword">from</span> <span class="token string">&quot;./bus.js&quot;</span>
<span class="token keyword">import</span> http <span class="token keyword">from</span> <span class="token string">&#39;./request/interceptor&#39;</span>
<span class="token keyword">import</span> mixin <span class="token keyword">from</span> <span class="token string">&#39;./mixin.js&#39;</span>
<span class="token keyword">import</span> pop <span class="token keyword">from</span> <span class="token string">&#39;./pop.js&#39;</span>
<span class="token keyword">import</span> ajax <span class="token keyword">from</span> <span class="token string">&#39;./ajax.js&#39;</span>
<span class="token keyword">import</span> url <span class="token keyword">from</span> <span class="token string">&#39;@/api/url&#39;</span>
<span class="token keyword">import</span> api <span class="token keyword">from</span> <span class="token string">&#39;@/api&#39;</span>
<span class="token keyword">import</span> vuexStore <span class="token keyword">from</span> <span class="token string">&#39;@/store/$u.mixin.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>getParent<span class="token punctuation">,</span>getChildren<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./getNode&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> rules<span class="token punctuation">,</span><span class="token punctuation">{</span>markRule<span class="token punctuation">,</span>bindRule<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./rules&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">install</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">Vue<span class="token punctuation">,</span> vm</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token comment">// Vue.use(soComponents);</span>
	Vue<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span>mixin<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$setVuex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token comment">//提供vuex 根 $setVuex方法</span>
		vm<span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">&#39;$setState&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
			name<span class="token punctuation">,</span>value
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$getParent <span class="token operator">=</span> getParent<span class="token punctuation">;</span><span class="token comment">//获取父方法</span>
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$getChildren<span class="token operator">=</span> getChildren<span class="token punctuation">;</span><span class="token comment">//获取子集合方法</span>
	
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> bus<span class="token punctuation">;</span><span class="token comment">//bus</span>
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$pop <span class="token operator">=</span> pop<span class="token punctuation">;</span><span class="token comment">//pop弹窗</span>
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$link <span class="token operator">=</span> vm<span class="token punctuation">.</span>$u<span class="token punctuation">.</span>route<span class="token punctuation">;</span> <span class="token comment">//路由方法</span>
	
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$http <span class="token operator">=</span> http<span class="token punctuation">;</span> <span class="token comment">// 基础包装的http</span>
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$ajax <span class="token operator">=</span> ajax<span class="token punctuation">;</span> <span class="token comment">// 包装异步请求</span>
	
    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$t <span class="token operator">=</span> tools<span class="token punctuation">;</span><span class="token comment">//工具集合</span>
	
    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$url <span class="token operator">=</span> url<span class="token punctuation">;</span><span class="token comment">//url</span>
    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$api <span class="token operator">=</span> api<span class="token punctuation">;</span><span class="token comment">//所有公共请求</span>
	
    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$r <span class="token operator">=</span> rules<span class="token punctuation">;</span><span class="token comment">//所有验证规则</span>
    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$markRule <span class="token operator">=</span> markRule<span class="token punctuation">;</span><span class="token comment">//快速生成验证</span>
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bindRule <span class="token operator">=</span> bindRule<span class="token punctuation">;</span><span class="token comment">//绑定验证方法</span>
	
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$sys <span class="token operator">=</span> uni<span class="token punctuation">.</span>getSystemInfoSync<span class="token punctuation">;</span><span class="token comment">//获取系统信息(同步方法)</span>
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$sysInfo <span class="token operator">=</span> uni<span class="token punctuation">.</span>getSystemInfo<span class="token punctuation">;</span><span class="token comment">//获取系统信息</span>
	<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$resize <span class="token operator">=</span> uni<span class="token punctuation">.</span>onWindowResize<span class="token punctuation">;</span><span class="token comment">//屏幕变化函数</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vuex-全局变量" tabindex="-1"><a class="header-anchor" href="#vuex-全局变量" aria-hidden="true">#</a> vuex 全局变量</h2><h3 id="约定变量" tabindex="-1"><a class="header-anchor" href="#约定变量" aria-hidden="true">#</a> 约定变量</h3><p>我们可以通过 <code>vuex</code> 可以在 js 和多个页面文件中公用变量，我们约定页面中需要公用的变量以 <code>vuex_</code>开头，如。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token operator">...</span>
	<span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">vuex_isHome</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
		<span class="token literal-property property">vuex_reftNav</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token literal-property property">vuex_NavCur</span> <span class="token operator">:</span> <span class="token string">&#39;userList&#39;</span><span class="token punctuation">,</span>
		<span class="token operator">...</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token operator">...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取变量" tabindex="-1"><a class="header-anchor" href="#获取变量" aria-hidden="true">#</a> 获取变量</h3><p>在 <code>Vuex</code> 的根 <code>state</code> 中的变量，我们直接通过 <code>mixin</code> 直接混入到了 <code>vue</code>组件中的data中。所以，在组件中我们可以直接通过 <code>this</code> 来直接访问到 这些全局变量。这样方便，但在命名上也需要我们注意这种变量的规范定义。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>regionList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vuex_dict<span class="token punctuation">.</span>region<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="设置变量" tabindex="-1"><a class="header-anchor" href="#设置变量" aria-hidden="true">#</a> 设置变量</h3><p>设置 <code>vuex</code>中 <strong>根</strong> 全局变量，我们可以通过快捷方法 <code>this.$setVuex</code> 直接设置，如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$setVuex</span><span class="token punctuation">(</span><span class="token string">&#39;vuex_token&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;isNotEmpty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="永久性变量" tabindex="-1"><a class="header-anchor" href="#永久性变量" aria-hidden="true">#</a> 永久性变量</h3><p>在 <code>vuex</code> 中需要保存到 <code>storage</code> 中的变量，可以将 <code>state</code>里已定义过的变量，在写在 <code>@store/index.js</code> 的 <code>saveStateKeys</code> 数组中，文件里已做简单处理，可永久性存储。</p><h2 id="全局监听" tabindex="-1"><a class="header-anchor" href="#全局监听" aria-hidden="true">#</a> 全局监听</h2>`,18),r=s("code",null,"uni",-1),d=s("code",null,"uni.$on",-1),k=s("code",null,"uni.$once",-1),m=s("code",null,"uni.$emit",-1),v=s("code",null,"uni.$off",-1),b={href:"https://uniapp.dcloud.io/collocation/frame/communication",target:"_blank",rel:"noopener noreferrer"};function h(y,x){const a=l("ExternalLinkIcon");return t(),p("div",null,[u,s("p",null,[r,n(" 官方 提供了 全局发布订阅的方法 "),d,n("、"),k,n("、 "),m,n(" 、"),v,n(" 方法来实现全局监听。详情可查看"),s("a",b,[n("官方页面通讯说明"),o(a)]),n("。")])])}const f=e(i,[["render",h],["__file","04.store.html.vue"]]);export{f as default};
