import{_ as o,p as e,q as c,s as n,G as s,t as p,J as t,n as l}from"./framework-d4dfb5a8.js";const i={},r=t('<blockquote><p><strong>pop</strong> 为全局的提示框，包括 <code>alert</code>、<code>confirm</code>、<code>msg</code>、<code>loading</code> 和 <code>toast</code>，在 <code>vue</code> 文件中我们直接通过 <code>this.$pop.</code> 来调用。</p></blockquote><h2 id="所有方法" tabindex="-1"><a class="header-anchor" href="#所有方法" aria-hidden="true">#</a> 所有方法</h2><h3 id="pop-alert-msg-confirm-opt" tabindex="-1"><a class="header-anchor" href="#pop-alert-msg-confirm-opt" aria-hidden="true">#</a> pop.alert(msg,confirm,opt)</h3><ul><li><code>msg</code> : 提示信息，可以为html富文本</li><li><code>confirm</code> : 点击确定事件</li><li><code>opt</code> : 自定义参数，这里的自定义参数是 <code>pop</code> 组件的配置，见下方</li></ul><h3 id="pop-confirm-msg-你确定此操作吗-confirm-cancel-opt" tabindex="-1"><a class="header-anchor" href="#pop-confirm-msg-你确定此操作吗-confirm-cancel-opt" aria-hidden="true">#</a> pop.confirm(msg =&quot;你确定此操作吗？&quot;,confirm,cancel,opt)</h3><ul><li><code>msg</code> : 提示信息，可以为html富文本</li><li><code>confirm</code> : 点击确定事件</li><li><code>cancel</code> ：点击取消事件</li><li><code>opt</code> : 自定义参数，这里的自定义参数是 <code>pop</code> 组件的配置，见下方</li></ul><h3 id="pop-loading-msg-加载中-opt" tabindex="-1"><a class="header-anchor" href="#pop-loading-msg-加载中-opt" aria-hidden="true">#</a> pop.loading(msg=&quot;加载中...&quot;,opt)</h3><h3 id="pop-loading-show-msg-加载中-opt" tabindex="-1"><a class="header-anchor" href="#pop-loading-show-msg-加载中-opt" aria-hidden="true">#</a> pop.loading.show(msg=&quot;加载中...&quot;,opt)</h3><h3 id="pop-loading-hide" tabindex="-1"><a class="header-anchor" href="#pop-loading-hide" aria-hidden="true">#</a> pop.loading.hide()</h3>',9),u=n("code",null,"uni.showLoading",-1),d=n("code",null,"opt",-1),k={href:"https://uniapp.dcloud.io/api/ui/prompt?id=showloading",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"uni",-1),v=n("li",null,[n("code",null,"pop.loading.show"),s(" 同 "),n("code",null,"pop.loading"),s(" 方法。")],-1),h=n("h3",{id:"pop-msg-msg-type-warning-duration-1600",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pop-msg-msg-type-warning-duration-1600","aria-hidden":"true"},"#"),s(' pop.msg(msg,type="warning",duration=1600)')],-1),g=n("h3",{id:"pop-msg-opt",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pop-msg-opt","aria-hidden":"true"},"#"),s(" pop.msg(opt)")],-1),b=n("li",null,[n("code",null,"pop.msg"),s(" 是基于 "),n("code",null,"uView"),s(" 的 "),n("code",null,"uToast"),s(" 二次包装，支持以上两种书写方式。")],-1),f=n("li",null,[n("code",null,"type"),s(" 值可以是 "),n("code",null,"primary / success / error / warning / info"),s(" 中任何一个。")],-1),y={href:"https://www.uviewui.com/components/toast.html",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"opt",-1),x=t(`<h3 id="pop-toast-msg-opt" tabindex="-1"><a class="header-anchor" href="#pop-toast-msg-opt" aria-hidden="true">#</a> pop.toast(msg,opt)</h3><h3 id="pop-toast-loading-msg-内容加载中-opt" tabindex="-1"><a class="header-anchor" href="#pop-toast-loading-msg-内容加载中-opt" aria-hidden="true">#</a> pop.toast.loading(msg=&quot;内容加载中...&quot;,opt)</h3><ul><li><code>toast</code> 调用的是 <code>uni.showToast</code> 方法，默认无图标模式。</li><li><code>pop.toast.loading</code> 调用的是 <code>uni.showToast</code> 图标为 <code>loading</code> 的状态。</li></ul><h2 id="js中引入使用" tabindex="-1"><a class="header-anchor" href="#js中引入使用" aria-hidden="true">#</a> js中引入使用</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> pop <span class="token keyword">from</span> <span class="token string">&#39;@/extends/pop.js&#39;</span>

<span class="token operator">...</span>

pop<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

pop<span class="token punctuation">.</span><span class="token function">msg</span><span class="token punctuation">(</span><span class="token string">&#39;提交成功！&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue文件中使用" tabindex="-1"><a class="header-anchor" href="#vue文件中使用" aria-hidden="true">#</a> vue文件中使用</h2><p>vue 文件中直接通过 <code>this.$pop</code> 使用：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$pop<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">&#39;你确定要执行 &lt;span style=&quot;color:red;font-weight:bold;&quot;&gt;这次操作&lt;/span&gt; 吗？&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;好的&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;取消&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token comment">//第四个参数为个性参数选项</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;提示&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>$pop<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;提示内容&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ajax-带-tip-属性-集成了-pop-confirm" tabindex="-1"><a class="header-anchor" href="#ajax-带-tip-属性-集成了-pop-confirm" aria-hidden="true">#</a> ajax 带 <code>tip</code> 属性，集成了 <code>pop.confirm</code></h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;你确定提交此请求吗？&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    <span class="token literal-property property">tip</span><span class="token operator">:</span><span class="token string">&#39;你确定提交此请求吗？&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="alert-和-conrfirm-所有自定义参数" tabindex="-1"><a class="header-anchor" href="#alert-和-conrfirm-所有自定义参数" aria-hidden="true">#</a> alert 和 conrfirm 所有自定义参数</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">mode</span> <span class="token operator">:</span> <span class="token string">&#39;alert&#39;</span><span class="token punctuation">,</span><span class="token comment">//弹窗模式，在详细模式种设置无效</span>
	<span class="token literal-property property">zIndex</span> <span class="token operator">:</span> <span class="token number">1075</span><span class="token punctuation">,</span><span class="token comment">//弹窗 z轴</span>
	<span class="token literal-property property">title</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token comment">//标题，不填写仍然占位</span>
	<span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;600rpx&#39;</span><span class="token punctuation">,</span><span class="token comment">//默认宽度</span>
	<span class="token literal-property property">contentClass</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token comment">//内容className</span>
	<span class="token literal-property property">contentStyle</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//内容样式</span>
	<span class="token literal-property property">showTitle</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">//是否显示标题</span>
        
	<span class="token literal-property property">confirmShow</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//是否显示确定按钮</span>
	<span class="token literal-property property">confirmText</span> <span class="token operator">:</span> <span class="token string">&#39;确认&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">confirmColor</span> <span class="token operator">:</span> <span class="token string">&#39;#2979ff&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">confirmStyle</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>

	<span class="token literal-property property">cancelShow</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">//是否显示取消按钮</span>
	<span class="token literal-property property">cancelText</span> <span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">cancelColor</span> <span class="token operator">:</span> <span class="token string">&#39;#606266&#39;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">cancelStyle</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        
	<span class="token literal-property property">zoom</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//是否开启缩放动画</span>
	<span class="token literal-property property">asyncClose</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">//是否异步关闭，只对确定按钮有效</span>
	<span class="token literal-property property">maskClose</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">//是否允许点击遮罩关闭Modal</span>
	<span class="token literal-property property">offset</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token comment">//往上偏移的值</span>
	<span class="token function-variable function">confirm</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//确定事件</span>
	<span class="token function-variable function">cancel</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//取消事件</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function w(j,q){const a=l("ExternalLinkIcon");return e(),c("div",null,[r,n("ul",null,[n("li",null,[s("用"),u,s("包装 ，"),d,s(" 配置"),n("a",k,[s("请参考 "),m,s(" 中配置"),p(a)]),s("。")]),v]),h,g,n("ul",null,[b,f,n("li",null,[n("a",y,[s("详细 "),_,s(" 请查看 uToast文档"),p(a)])])]),x])}const C=o(i,[["render",w],["__file","03.pop.html.vue"]]);export{C as default};
