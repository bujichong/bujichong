import{_ as n,p as s,q as a,J as t}from"./framework-d4dfb5a8.js";const p={},e=t(`<blockquote><p><strong>ajax</strong> 为全局提供的异步请求方法，拦截方法在 <code>@/extends/request/interceptor.js</code>中，可以在 js 中 引入 <code>@/extends/ajax.js</code> 调用，也可以在 <code>.vue</code> 文件中直接 <code>this.$ajax</code> 来调用。</p></blockquote><h2 id="全局基础配置" tabindex="-1"><a class="header-anchor" href="#全局基础配置" aria-hidden="true">#</a> 全局基础配置</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>http<span class="token punctuation">.</span><span class="token function">setConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">baseUrl</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:8036&#39;</span><span class="token punctuation">,</span>
	<span class="token comment">// 如果将此值设置为true，拦截回调中将会返回服务端返回的所有数据response，而不是response.data</span>
	<span class="token comment">// dataType: &#39;json&#39;,</span>
	<span class="token literal-property property">loadingText</span><span class="token operator">:</span> <span class="token string">&#39;请求中...&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 请求loading中的文字提示</span>
	<span class="token comment">// loadingTime: 800, // 在此时间内，请求还没回来的话，就显示加载中动画，单位ms</span>
	<span class="token literal-property property">originalData</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否在拦截器中返回服务端的原始数据</span>
	<span class="token comment">// showLoading: true, // 是否显示请求中的loading</span>
	<span class="token comment">// loadingMask: true, // 展示loading的时候，是否给一个透明的蒙层，防止触摸穿透</span>
	<span class="token comment">// 设置自定义头部content-type</span>
	<span class="token literal-property property">header</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token comment">// Accept: &quot;application/json; charset=utf-8&quot;,</span>
	<span class="token comment">// &#39;Content-Type&#39; : &#39;application/json&#39; //json</span>
		<span class="token string-property property">&#39;Content-Type&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span> <span class="token comment">//formData</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多配置 请直接 <code>@/extends/request/interceptor.js</code> 中设置。</p><h2 id="请求方法" tabindex="-1"><a class="header-anchor" href="#请求方法" aria-hidden="true">#</a> 请求方法</h2><h3 id="ajax-calllback-pormise" tabindex="-1"><a class="header-anchor" href="#ajax-calllback-pormise" aria-hidden="true">#</a> ajax (calllback Pormise)</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">url</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token comment">//请求地址</span>
	<span class="token literal-property property">type</span> <span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span><span class="token comment">//采用post方式提交</span>
	<span class="token literal-property property">data</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//请求数据</span>
	<span class="token literal-property property">tip</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">//提交是否需要确认，true或string需要确认</span>
	<span class="token literal-property property">calltip</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">//提交成功后显示请求成功信息</span>
	<span class="token literal-property property">jsonData</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">//是否json格式，默认false 为formData</span>
	<span class="token literal-property property">showLoading</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token comment">//是否显示loading</span>
	<span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">//code = 200 或者 201返回事件</span>
	<span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token comment">//请求成功返回事件</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ajax-post-ajax-get-ajax-postjson" tabindex="-1"><a class="header-anchor" href="#ajax-post-ajax-get-ajax-postjson" aria-hidden="true">#</a> ajax.post / ajax.get / ajax.postJson</h3><p>ajax 的快捷写法 <code>Function(url,data,tip=false,jsonData=false,calltip=false)</code>，例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/api/test&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;你确定提交此请求吗？&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue文件中使用" tabindex="-1"><a class="header-anchor" href="#vue文件中使用" aria-hidden="true">#</a> vue文件中使用</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    <span class="token literal-property property">tip</span><span class="token operator">:</span><span class="token string">&#39;你确定提交此请求吗？&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">rst</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">,</span>rst<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">rst</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;callback&#39;</span><span class="token punctuation">,</span>rst<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">this</span><span class="token punctuation">.</span>$ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
     <span class="token operator">...</span>           
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","02.ajax.html.vue"]]);export{r as default};
