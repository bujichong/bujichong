import{_ as s,p as t,q as e,s as n,G as a,J as p}from"./framework-d4dfb5a8.js";const l={},o=n("blockquote",null,[n("p",null,[a("我们在 "),n("code",null,"html"),a(" 中往往通过 "),n("code",null,"data-opt"),a(" 或 "),n("code",null,"data-options"),a(" 传递组件配置，在书写脚本时，我们想获取标签上的参数配置，就可以通过 "),n("code",null,"$T.data"),a(" 来获得。")])],-1),c=n("div",{class:"custom-container warning"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8v4"}),n("path",{d:"M12 16h.01"})])]),n("p",{class:"custom-container-title"},"注意"),n("ul",null,[n("li",null,[n("code",null,"data-opt"),a(" 和"),n("code",null,"data-options"),a(" 两个属性同时存在时，返回 "),n("code",null,"data-opt"),a(" 中的参数数据。")]),n("li",null,[a("数据中可以使用 "),n("code",null,"{"),a(),n("code",null,"}"),a(" 将json 数据包裹，也可以不要。")]),n("li",null,[a("传递的数据使用非严格 "),n("code",null,"json"),a(" 格式，参数键值不强制加双引号，并可以自由换行。")])])],-1),u=p(`<h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><p><strong>Html:</strong></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>txt-tree<span class="token punctuation">&quot;</span></span> 
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control required<span class="token punctuation">&quot;</span></span> 
    <span class="token attr-name">data-opt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ url:&#39;json/groupTree.js&#39;, required:true }<span class="token punctuation">&quot;</span></span> 
    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>group<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> 
 <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>applyer<span class="token punctuation">&quot;</span></span> 
    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drop w-90 easyui-combobox<span class="token punctuation">&quot;</span></span> 
    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>applyer<span class="token punctuation">&quot;</span></span> 
    <span class="token attr-name">data-options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> useAllData:true, multiple:true, url:&#39;json/proposer.js&#39;, &#39;valueField&#39;:&#39;id&#39;, &#39;textField&#39;:&#39;text&#39; <span class="token punctuation">&quot;</span></span>
<span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Js:</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> treeData <span class="token operator">=</span> $<span class="token constant">T</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&#39;#txt-tree&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//treeData = {</span>
<span class="token comment">//  url:&#39;json/groupTree.js&#39;,</span>
<span class="token comment">//  required:true</span>
<span class="token comment">//}</span>

<span class="token keyword">var</span> dropData <span class="token operator">=</span> $<span class="token constant">T</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">&#39;#applyer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// dropData = {</span>
<span class="token comment">//     useAllData:true,</span>
<span class="token comment">//     multiple:true, </span>
<span class="token comment">//     url:&#39;json/proposer.js&#39;, </span>
<span class="token comment">//     &#39;valueField&#39;:&#39;id&#39;, </span>
<span class="token comment">//     &#39;textField&#39;:&#39;text&#39;</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),i=[o,c,u];function r(d,k){return t(),e("div",null,i)}const v=s(l,[["render",r],["__file","6.data.html.vue"]]);export{v as default};
