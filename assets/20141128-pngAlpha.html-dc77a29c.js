import{_ as r,p as h,q as o,s as a,G as n,t,J as p,n as s}from"./framework-d4dfb5a8.js";const i="/images/pnggif-1.png",d="/images/pnggif-3.png",g="/images/pnggif-4.png",c={},G=a("p",null,[a("img",{src:i,alt:""})],-1),P=a("p",null,"PNG这种文件格式值得科普下,对比GIF来说",-1),l=a("h4",{id:"png和gif都支持动画",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#png和gif都支持动画","aria-hidden":"true"},"#"),n(),a("strong",null,"PNG和GIF都支持动画")],-1),N={href:"http://ooxx.me/apng.orz",target:"_blank",rel:"noopener noreferrer"},f=p('<h4 id="第一种png叫png8-索引色透明" tabindex="-1"><a class="header-anchor" href="#第一种png叫png8-索引色透明" aria-hidden="true">#</a> <strong>第一种PNG叫PNG8(索引色透明)</strong></h4><p>简单说可以理解为静态的GIF 他们都只有256色,也支持索引透明,就是指定一个像素点是不是透明 但是PNG由于算法的优势,体积比较少 所以,静态GIF完全可用PNG8取代</p><h4 id="第二种png也叫png8-alpha透明" tabindex="-1"><a class="header-anchor" href="#第二种png也叫png8-alpha透明" aria-hidden="true">#</a> <strong>第二种PNG也叫PNG8(Alpha透明)</strong></h4><p>牛逼在可指定像素点的透明度,例如50%透明度 这种优点在于比PNG24/32体积小,但效果一样 缺点在于IE6支持不好,~~~~会把半透明的像素点显示成全透明</p><h4 id="第三种png叫png24" tabindex="-1"><a class="header-anchor" href="#第三种png叫png24" aria-hidden="true">#</a> <strong>第三种PNG叫PNG24</strong></h4><p>和PNG8的区别仅在于体积更大</p><h4 id="更正-png24不透明-但是颜色数很多-不止256色" tabindex="-1"><a class="header-anchor" href="#更正-png24不透明-但是颜色数很多-不止256色" aria-hidden="true">#</a> <strong>更正</strong>: PNG24不透明,但是颜色数很多,不止256色</h4><p>而Photoshop里导出的png24其实是png32</p><h4 id="第四种png叫png32" tabindex="-1"><a class="header-anchor" href="#第四种png叫png32" aria-hidden="true">#</a> <strong>第四种PNG叫PNG32</strong></h4><p>和photoshop的PSD一样,是Fireworks的默认源文件格式,包含图层和通道信息 和PNG24的区别在于有图层 缺点在于IE6支持不好,会把透明区域显示成蓝灰底色</p><h4 id="更正-png32和png24的区别就是多了透明信息" tabindex="-1"><a class="header-anchor" href="#更正-png32和png24的区别就是多了透明信息" aria-hidden="true">#</a> <strong>更正</strong>: PNG32和PNG24的区别就是多了透明信息</h4><h4 id="新增-第五种png叫fireworks源文件" tabindex="-1"><a class="header-anchor" href="#新增-第五种png叫fireworks源文件" aria-hidden="true">#</a> <strong>(新增)第五种PNG叫Fireworks源文件</strong></h4><p>类似于Phosothop的PSD,有图层通道信息神马的 是PNG的一种扩展 这种丢到浏览器里表现和PNG32一样</p><p>简单的归纳就是</p><h4 id="动画" tabindex="-1"><a class="header-anchor" href="#动画" aria-hidden="true">#</a> <strong>动画</strong>:</h4><p>支持: GIF, APNG只在firefox支持 不支持: 非Firefox的PNG</p><h4 id="索引色透明-某像素是全透明还是全不透明" tabindex="-1"><a class="header-anchor" href="#索引色透明-某像素是全透明还是全不透明" aria-hidden="true">#</a> <strong>索引色透明</strong>(某像素是全透明还是全不透明):</h4><p>支持: GIF/PNG都支持 不支持: <strong>IE6下</strong>的PNG8(Alpha透明)和PNG24/32</p><h4 id="alpha透明-可指定透明度" tabindex="-1"><a class="header-anchor" href="#alpha透明-可指定透明度" aria-hidden="true">#</a> <strong>Alpha透明</strong>(可指定透明度)**: **</h4><p>支持:PNG8(Aplha透明)/PNG32 不支持: GIF/PNG8(索引色透明)/PNG24</p><h4 id="图层" tabindex="-1"><a class="header-anchor" href="#图层" aria-hidden="true">#</a> <strong>图层</strong></h4><p>支持: PNG(FW源文件) 不支持: PNG8/PNG24/PNG32/GIF</p><h4 id="颜色" tabindex="-1"><a class="header-anchor" href="#颜色" aria-hidden="true">#</a> <strong>颜色</strong></h4><p>256色：GIF PNG8(2种) 其他的格式颜色数不过来,好多</p><h4 id="附加说明" tabindex="-1"><a class="header-anchor" href="#附加说明" aria-hidden="true">#</a> <strong>附加说明:</strong></h4><p>Photoshop 只能创建GIF、 PNG8(索引透明)和PNG24(其实是PNG32)</p><p><img src="'+d+'" alt=""></p><p>Fireworks 能创建任意格式的GIF和PNG</p><p><img src="'+g+'" alt=""></p><p>PNG8(索引透明)在创建的时候有个参数叫(PS杂边|FW色板),这个作用就是用杂边色加上像素点的透明度例如50%,生成伪透明的不透明像素点 适用于固定底色的伪半透明,例子里用的杂边是黑色,在白背景下就很明显</p><p>PNG8(Alpha透明)在IE6下会有过度裁剪的问题,可能是把半透明的像素都去掉了,所以某些图片会如最上面第一张图所示,被狗咬的感觉 规避方案:</p><p>1.用2张图,IE6用PNG8(索引透明),非IE6用PNG8(Alpha透明),在CSS里用_这个IE6hack来区别 2.半透明在作图的时候就要考虑到被去掉后的样子,对设计师有要求,不大现实 3.说服自己接受这坨大便,然后咽下去就这样了你想咋样</p><p>静态GIF、PNG 24、PNG32不大推荐在网页上用</p>',33);function _(x,u){const e=s("ExternalLinkIcon");return h(),o("div",null,[G,P,l,a("p",null,[n("PNG的动画也叫APNG,只是firefox支持,详见 "),a("a",N,[n("http://ooxx.me/apng.orz"),t(e)]),n(" ,如Firefox看这里的favicon,是会动滴 所以动画图片来说,还是GIF支持最好")]),f])}const F=r(c,[["render",_],["__file","20141128-pngAlpha.html.vue"]]);export{F as default};
