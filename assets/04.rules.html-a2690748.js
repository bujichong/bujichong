import{_ as n,p as a,q as s,J as t}from"./framework-d4dfb5a8.js";const p={},e=t(`<blockquote><p><strong>soUni</strong> 提供了一套 Vue UI 框架中最简洁方便的验证方案。</p></blockquote><ul><li>验证规则可以直接预设配置在表单项 <code>item</code> 的 <code>rule</code> 属性上，并根据<code>label</code>信息，自动生成验证提示。如果你不喜欢这样的配置，仍然可以在 <code>rules</code> 对象中 用符合 <code>async-validator</code> 的方法进行表单验证，都是兼容的。</li><li>我们可以通过 <code>form</code> 的 <code>updateRules</code> 来更新表单项的验证规则。</li><li><code>rules</code> 核心函数在 <code>@extends/rules.js</code> 中，可自行添加新的验证规则。</li></ul><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p><strong>模板代码</strong>：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>so-form</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>soForm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rules<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>row</span><span class="token punctuation">&gt;</span></span>				
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>姓名<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;reqPlus&#39;,&#39;zn&#39;]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>txt</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.name<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>电话<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phone<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>txt</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.phone<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>性别<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sex<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>req<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>so-sheet</span> <span class="token attr-name">:list</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>actionSheetList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.sex<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:canEmpty</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@confirm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectSex<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>row</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>submit</span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submitForm<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>提交<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>reset</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>so-form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>js代码</strong>：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">form</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">age</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">date</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>$r<span class="token punctuation">.</span><span class="token function">req</span><span class="token punctuation">(</span><span class="token string">&#39;日期&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//在这里也可以通过this.$r 来验证字段</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token comment">//async-validator 方式配置</span>
                    <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;此为必填字段&#39;</span>，
                    <span class="token comment">// blur和change事件触发检验</span>
                    <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;blur&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;change&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token comment">// 正则判断为字母或数字</span>
                <span class="token punctuation">{</span>
                    <span class="token literal-property property">pattern</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[0-9a-zA-Z]*$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
                    <span class="token comment">// 正则检验前先将值转为字符串</span>
                    <span class="token function">transform</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;只能包含字母或数字&#39;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token comment">// 6-8个字符之间的判断</span>
                <span class="token punctuation">{</span>
                    <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;长度在6-8个字符之间&#39;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token comment">// 自定义规则判断是否包含字母&quot;A&quot;</span>
                <span class="token punctuation">{</span>
                    <span class="token function-variable function">validator</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">rule<span class="token punctuation">,</span> value<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$u<span class="token punctuation">.</span>test<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                 <span class="token punctuation">}</span><span class="token punctuation">,</span>
                 <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;必须包含字母&quot;A&quot;&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token operator">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="绑定验证规则" tabindex="-1"><a class="header-anchor" href="#绑定验证规则" aria-hidden="true">#</a> 绑定验证规则</h2><p>uni 原生的表单是没有提供验证的，uview提供了一整套验证方法，但考虑兼容性，需要用户在页面加载完成时手动通过 <code>seRules</code> 方法绑定 <code>rules</code> 到表单上，<code>so-form</code> 通过全局 <code>mixin</code> 在页面加载的时候，自动检测页面是否有表单，并自动绑定 属性 <code>rules</code> 到表单上。另外，还实现了一整套更加简易的表单验证方法，可以直接在 <code>item</code> 组件上直接添加 <code>rule</code> 属性来绑定验证规则，并可以根据需求变化，动态更新表单项的验证规则。如：</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>姓名<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;reqPlus&#39;,&#39;zn&#39;]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>txt</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.name<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>范围数值<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>num<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>req|range[1,20,true,true]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>txt</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.num<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>邮箱<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>req|email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>txt</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form.email<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>item</code> 组件的 <code>rule</code> 属性可以为数组 或 字符串，多个验证规则在字符串中通过 <code>|</code> 隔开，参数写在验证规则后的中括号里。</li><li>表单的验证规则是 <code>so-form</code> 的 <code>rules</code> 属性和 <code>item</code> 标签上 <code>rule</code> 属性的集合，<code>item</code> 属性优先级更高，合并是覆盖式合并，最好不要多处书写。</li></ul><h2 id="更新验证规则" tabindex="-1"><a class="header-anchor" href="#更新验证规则" aria-hidden="true">#</a> 更新验证规则</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>soForm<span class="token punctuation">.</span><span class="token function">updateRules</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token comment">//对象参数，同时对多个字段进行更新</span>
    <span class="token literal-property property">name</span> <span class="token operator">:</span> <span class="token string">&#39;req|cn&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;req&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;tel&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span> <span class="token operator">:</span> <span class="token string">&#39;req&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sex</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">num</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">valid</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
            <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> 
            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;数值不能少于5个字&#39;</span><span class="token punctuation">,</span> 
            <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&#39;change&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>soForm<span class="token punctuation">.</span><span class="token function">updateRules</span><span class="token punctuation">(</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除date字段已有全部验证</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rules-现所有验证方法" tabindex="-1"><a class="header-anchor" href="#rules-现所有验证方法" aria-hidden="true">#</a> rules 现所有验证方法</h2><table><thead><tr><th>函数名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>req</td><td>普通必填验证，可验证字符串</td><td>Function(val)</td></tr><tr><td>reqPlus</td><td>增强版必填验证，包括 undefined,null,{},[] 均为未填写</td><td>Function(val)</td></tr><tr><td>required</td><td>同req</td><td>Function(val)</td></tr><tr><td>len</td><td>字符长度验证</td><td>Function(val,min,max)</td></tr><tr><td>email</td><td>验证电子邮件</td><td>Function(val)</td></tr><tr><td>username</td><td>普通的用户名，需为字母、数字或下划线</td><td>Function(val)</td></tr><tr><td>normalPass</td><td>需为字母及数字</td><td>Function(val)</td></tr><tr><td>complexPass</td><td>须含大小写字母、数字及特殊字符</td><td>Function(val)</td></tr><tr><td>cn</td><td>中文验证</td><td>Function(val)</td></tr><tr><td>en</td><td>只能含英文字符</td><td>Function(val)</td></tr><tr><td>code</td><td>只能包含汉字、英文字母、数字及下划线</td><td>Function(val)</td></tr><tr><td>engNum</td><td>需为英文字母或数字</td><td>Function(val)</td></tr><tr><td>chsEngNum</td><td>需为汉字、英文字母或数字</td><td>Function(val)</td></tr><tr><td>chsEngNumB</td><td>需为汉字、字母或数字且不能为纯数字</td><td>Function(val)</td></tr><tr><td>num</td><td>必须为数字</td><td>Function(val)</td></tr><tr><td>pNum</td><td>必须为正数，包含0</td><td>Function(val)</td></tr><tr><td>sNum</td><td>必须为大于0的正数</td><td>Function(val)</td></tr><tr><td>int</td><td>须为整数</td><td>Function(val)</td></tr><tr><td>pInt</td><td>须为正整数，包含0</td><td>Function(val)</td></tr><tr><td>sInt</td><td>须为大于0的整数</td><td>Function(val)</td></tr><tr><td>nInt</td><td>须为负整数</td><td>Function(val)</td></tr><tr><td>min</td><td>值不能小于</td><td>Function(val,minNum)</td></tr><tr><td>max</td><td>值不能大于</td><td>Function(val,maxNum)</td></tr><tr><td>minLen</td><td>最小长度</td><td>Function(val,minLen)</td></tr><tr><td>maxLen</td><td>最大长度</td><td>Function(val,maxLen)</td></tr><tr><td>rangeLen</td><td>长度范围</td><td>Function(val,minLen,maxLen)</td></tr><tr><td>range</td><td>数值范围， opt[0]-opt[1]:数据范围，opt[3]:不能等于，只能大于 opt[4]:不能等于，只能小于。 例如：0,9999999999,false,false</td><td>Function(val,min,max,minp,maxp)</td></tr><tr><td>rangeNum</td><td>比range 规则多一个小数点位数验证， opt[0]-opt[1]:数据范围，opt[2]:小数位，opt[3]:不能等于，只能大于 opt[4]:不能等于，只能小于。如：0,9999999999.999999,6,false,false</td><td>Function(val,min,max,pos,minp,maxp)</td></tr><tr><td>date</td><td>日期格式如：1980-01-01</td><td>Function(val)</td></tr><tr><td>dataTime</td><td>日期时间，如：格式如：1980-01-01 12:12</td><td>Function(val)</td></tr><tr><td>dateTimeSecond</td><td>如：格式如：1980-01-01 12:12:01</td><td>Function(val)</td></tr><tr><td>age</td><td>年龄验证，0-120的整数</td><td>Function(val)</td></tr><tr><td>mobile</td><td>需为正确的手机号</td><td>Function(val)</td></tr><tr><td>phone</td><td>座机电话号码</td><td>Function(val)</td></tr><tr><td>phoneArea</td><td>需为正确的区号</td><td>Function(val)</td></tr><tr><td>tel</td><td>普通座机或手机号</td><td>Function(val)</td></tr><tr><td>qq</td><td>qq号码</td><td>Function(val)</td></tr><tr><td>zipCode</td><td>邮编</td><td>Function(val)</td></tr><tr><td>ip</td><td>ip地址</td><td>Function(val)</td></tr><tr><td>idCardNo</td><td>身份证号码</td><td>Function(val)</td></tr></tbody></table>`,15),o=[e];function c(l,u){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","04.rules.html.vue"]]);export{r as default};
