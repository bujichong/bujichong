import{_ as p,p as e,q as l,w as c,s as n,G as s,t as o,J as a,n as r}from"./framework-d4dfb5a8.js";const i="/images/mCustomScrollbar-1.png",u={},k=n("blockquote",null,[n("p",null,"这个不是我原创，"),n("p",null,"不过确实好用，为了备忘，特留此篇。")],-1),d={href:"http://manos.malihu.gr/jquery-custom-content-scroller/",target:"_blank",rel:"noopener noreferrer"},m=a(`<h2 id="mcustomscrollbar-的参数介绍" tabindex="-1"><a class="header-anchor" href="#mcustomscrollbar-的参数介绍" aria-hidden="true">#</a> mCustomScrollbar 的参数介绍</h2><p>mCustomScrollbar 这个插件的功能巨大，所以参数也很多，参数值当然更多。在介绍参数的时候，我想先为新手介绍两种参数值的写法，分别是直接的和合并的。</p><p>我们平时接触的插件用的参数，都是直接跟着参数写上参数值，这个比较直观简单。在这个插件中，参数值太多，所以把一些参数合并起来写。例如下面要介绍到的 scrollButtons 这个参数，它又有四个子属性：enable、scrollType、scrollSpeed、scrollAmount，这四个属性也分别有自己的值，来实现相应的功能。如果再加上其他的参数，那么我们应该这样写：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mCustomScrollbar</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">scrollButtons</span><span class="token operator">:</span><span class="token punctuation">{</span>
		<span class="token literal-property property">enable</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
		<span class="token literal-property property">scrollType</span><span class="token operator">:</span><span class="token string">&quot;continuous&quot;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">scrollSpeed</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
		<span class="token literal-property property">scrollAmount</span><span class="token operator">:</span><span class="token number">40</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
 	<span class="token literal-property property">horizontalScroll</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一定要注意闭合的括号和语句之间的逗号，新手可能会因为不小心，没有严格的按照这个规则写导致插件无法运行。好，下面我们介绍详细的参数。</p>`,5),g=n("li",null,[n("strong",null,"set_width:false"),s("：设置你内容的宽度 值可以是像素或者百分比")],-1),v=n("li",null,[n("strong",null,"set_height:false"),s("：设置你内容的高度 值可以是像素或者百分比")],-1),b=n("li",null,[n("strong",null,"horizontalScroll:Boolean"),s("：是否创建一个水平滚动条 默认是垂直滚动条 值可为:true(创建水平滚动条) 或 false")],-1),f=n("li",null,[n("strong",null,"scrollInertia:Integer"),s("：滚动的惯性值 在毫秒中 使用0可以无滚动惯性 (滚动惯性可以使区块滚动更加平滑)")],-1),y=n("strong",null,"scrollEasing:String",-1),h={href:"http://view.jqueryui.com/formcontrols/demos/effect/easing.html",target:"_blank",rel:"noopener noreferrer"},S=a("<li><strong>mouseWheel:String/Boolean</strong>：鼠标滚动的支持 值为:true.false,像素 默认的情况下 鼠标滚动设置成像素值 填写false取消鼠标滚动功能</li><li><strong>mouseWheelPixels:Integer</strong>：鼠标滚动中滚动的像素数目 值为以像素为单位的数值</li><li><strong>autoDraggerLength:Boolean</strong>：根据内容区域自动调整滚动条拖块的长度 值:true,false</li><li><strong>scrollButtons:{ enable:Boolean }</strong>：是否添加 滚动条两端按钮支持 值:true,false</li><li><strong>scrollButtons:{ scrollType:String }</strong>：滚动按钮滚动类型 值:”continuous”(当你点击滚动控制按钮时断断续续滚动) “pixels”(根据每次点击的像素数来滚动)</li><li><strong>scrollButtons:{ scrollSpeed:Integer }</strong>：设置点击滚动按钮时候的滚动速度(默认 20) 设置一个更高的数值可以更快的滚动</li><li><strong>scrollButtons:{ scrollAmount:Integer }</strong>：设置点击滚动按钮时候每次滚动的数值 像素单位 默认 40像素</li><li><strong>advanced:{ updateOnBrowserResize:Boolean }</strong>：根据百分比为自适应布局 调整浏览器上滚动条的大小 值:true,false 设置 false 如果你的内容块已经被固定大小</li><li><strong>advanced:{ updateOnContentResize:Boolean }</strong>：自动根据动态变换的内容调整滚动条的大小 值:true,false 设置成 true 将会不断的检查内容的长度并且据此改变滚动条大小 建议除非必要不要设置成 true 如果页面中有很多滚动条的时候 它有可能会产生额外的移出 你可以使用 update 方法来替代这个功能</li><li><strong>advanced:{ autoExpandHorizontalScroll:Boolean }</strong>：自动扩大水平滚动条的长度 值:true,false 设置 true 你可以根据内容的动态变化自动调整大小</li><li><strong>advanced:{ autoScrollOnFocus:Boolean }</strong>：是否自动滚动到聚焦中的对象 例如表单使用类似TAB键那样跳转焦点 值:true false</li><li><strong>callbacks:{ onScrollStart:function(){} }</strong>：使用自定义的回调函数在滚动时间开始的时候执行</li><li><strong>callbacks:{ onScroll:function(){} }</strong>：自定义回调函数在滚动中执行 Demo 同上</li><li><strong>callbacks:{ onTotalScroll:function(){} }</strong>：当滚动到底部的时候调用这个自定义回调函数 Demo 同上</li><li><strong>callbacks:{ onTotalScrollBack:function(){} }</strong>：当滚动到顶部的时候调用这个自定义回调函数 Demo 同上</li><li><strong>callbacks:{ onTotalScrollOffset:Integer }</strong>：设置到达顶部或者底部的偏移量 像素单位</li><li><strong>callbacks:{ whileScrolling:function(){} }</strong>：当用户正在滚动的时候执行这个自定义回调函数</li><li><strong>callbacks:{ whileScrollingInterval:Integer }</strong>：设置调用 whileScrolling 回调函数的时间间隔 毫秒单位</li>",18),q=a(`<p>下面是所有参数的列表和它们的默认值</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mCustomScrollbar</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">set_width</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
	<span class="token literal-property property">set_height</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
	<span class="token literal-property property">horizontalScroll</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
	<span class="token literal-property property">scrollInertia</span><span class="token operator">:</span><span class="token number">550</span><span class="token punctuation">,</span>
	<span class="token literal-property property">scrollEasing</span><span class="token operator">:</span><span class="token string">&quot;easeOutCirc&quot;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">mouseWheel</span><span class="token operator">:</span><span class="token string">&quot;auto&quot;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">autoDraggerLength</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token literal-property property">scrollButtons</span><span class="token operator">:</span><span class="token punctuation">{</span>
		<span class="token literal-property property">enable</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
		<span class="token literal-property property">scrollType</span><span class="token operator">:</span><span class="token string">&quot;continuous&quot;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">scrollSpeed</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span>
		<span class="token literal-property property">scrollAmount</span><span class="token operator">:</span><span class="token number">40</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token literal-property property">advanced</span><span class="token operator">:</span><span class="token punctuation">{</span>
		<span class="token literal-property property">updateOnBrowserResize</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token literal-property property">updateOnContentResize</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
		<span class="token literal-property property">autoExpandHorizontalScroll</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
		<span class="token literal-property property">autoScrollOnFocus</span><span class="token operator">:</span><span class="token boolean">true</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token literal-property property">callbacks</span><span class="token operator">:</span><span class="token punctuation">{</span>
		<span class="token function-variable function">onScrollStart</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function-variable function">onScroll</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function-variable function">onTotalScroll</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function-variable function">onTotalScrollBack</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token literal-property property">onTotalScrollOffset</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
		<span class="token literal-property property">whileScrolling</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
		<span class="token literal-property property">whileScrollingInterval</span><span class="token operator">:</span><span class="token number">30</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mcustomscrollbar-的使用方法" tabindex="-1"><a class="header-anchor" href="#mcustomscrollbar-的使用方法" aria-hidden="true">#</a> mCustomScrollbar 的使用方法</h2><p><strong>update</strong></p><p>用法：$(selector).mCustomScrollbar(“update”);</p><p>调用 mCustomScrollbar 函数的 update 方法去实时更新滚动条当内容发生变化（例如 通过 Javascript 增加或者移除一个对象、通过 ajax 插入一段新内容、隐藏或者显示一个新内容等）</p><p>下面是例子：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.content .mCSB_container&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;p&gt;New content here...&lt;/p&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mCustomScrollbar</span><span class="token punctuation">(</span><span class="token string">&quot;update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.content .myImagesContainer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;img src=&#39;myNewImage.jpg&#39; /&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.content .myImagesContainer img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mCustomScrollbar</span><span class="token punctuation">(</span><span class="token string">&quot;update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#content-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">800</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;slow&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mCustomScrollbar</span><span class="token punctuation">(</span><span class="token string">&quot;update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>scrollTo</strong></p><p>用法：$(selector).mCustomScrollbar(“scrollTo”,position);</p><p>你可以使用这个方法自动的滚动到你想要滚动到的位置。这个位置可以使用字符串（例如 “#element-id”，“bottom” 等）描述或者是一个数值（像素单位）。下面的例子将会滚动到最下面的对象</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mCustomScrollbar</span><span class="token punctuation">(</span><span class="token string">&quot;scrollTo&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;last&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>scrollTo 方法的参数</p><ul><li><strong>$(selector).mCustomScrollbar(“scrollTo”,String);</strong>：滚动到某个对象的位置，字符串型的值可以是 id 或者 class 的名字</li><li><strong>$(selector).mCustomScrollbar(“scrollTo”,”top”);</strong>：滚动到顶部（垂直滚动条）</li><li><strong>$(selector).mCustomScrollbar(“scrollTo”,”bottom”);</strong>：滚动到底部（垂直滚动条）</li><li><strong>$(selector).mCustomScrollbar(“scrollTo”,”left”);</strong>：滚动到最左边（水平滚动条）</li><li><strong>$(selector).mCustomScrollbar(“scrollTo”,”right”);</strong>：滚动到最右边（水平滚动条</li><li><strong>$(selector).mCustomScrollbar(“scrollTo”,”first”);</strong>：滚动到内容区域中的第一个对象位置</li><li><strong>$(selector).mCustomScrollbar(“scrollTo”,”last”);</strong>：滚动到内容区域中的最后一个对象位置</li><li><strong>$(selector).mCustomScrollbar(“scrollTo”,Integer);</strong>：滚动到某个位置（像素单位）</li></ul><p>scrollTo 方法还有两个额外的选项参数</p><ul><li><strong>moveDragger: Boolean</strong>：滚动滚动条的滑块到某个位置像素单位，值：true，flase。例如：$(selector).mCustomScrollbar(“scrollTo”,200,{ moveDragger:true });</li><li><strong>callback：Boolean</strong>：执行回调函数当 scroll-to 完成之后，值：true，false 例如：$(selector).mCustomScrollbar(“scrollTo”,200,{ callback:true });</li></ul><p><strong>disable</strong></p><p>用法：$(selector).mCustomScrollbar(“disable”);</p><p>调用 disable 方法去使滚动条不可用。如果想使其重新可用，调用 update方法。disable 方法使用一个可选参数（默认 false）你可以设置 true 如果你想重新让内容区域滚动当 scrollbar 不可用时。例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mCustomScrollbar</span><span class="token punctuation">(</span><span class="token string">&quot;disable&quot;</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>destroy</strong></p><p>用法：$(selector).mCustomScrollbar(“destroy”);</p><p>调用 destroy 方法可以移除某个对象的自定义滚动条并且恢复默认样式</p><p><a href="">为了</a>更加直观的看到要定义的滚动条区域，官方给出了一张非常形象的图片</p><p><img src="`+i+'" alt=""></p>',25);function _(C,T){const t=r("ExternalLinkIcon");return e(),l("div",null,[k,c(" more "),n("p",null,[s("插件地址： "),n("a",d,[s("点击这里"),o(t)])]),m,n("ul",null,[g,v,b,f,n("li",null,[y,s("：滚动动作类型 查看 "),n("a",h,[s("jquery UI easing"),o(t)]),s(" 可以看到所有的类型")]),S]),q])}const $=p(u,[["render",_],["__file","20150912-mCustomScrollbar.html.vue"]]);export{$ as default};
